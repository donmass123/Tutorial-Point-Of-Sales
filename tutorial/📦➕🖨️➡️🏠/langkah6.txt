public function getProductAlert($business_id, $permitted_locations = null)
{
    $query = VariationLocationDetails::join(
        'product_variations as pv',
        'variation_location_details.product_variation_id',
        '=',
        'pv.id'
    )
        ->join(
            'variations as v',
            'variation_location_details.variation_id',
            '=',
            'v.id'
        )
        ->join(
            'products as p',
            'variation_location_details.product_id',
            '=',
            'p.id'
        )
        ->leftjoin(
            'business_locations as l',
            'variation_location_details.location_id',
            '=',
            'l.id'
        )
        ->leftjoin('units as u', 'p.unit_id', '=', 'u.id')
        ->where('p.business_id', $business_id)
        ->where('p.enable_stock', 1)
        ->where('p.is_inactive', 0)
        ->whereNull('v.deleted_at')
        ->whereNotNull('p.alert_quantity')
        ->whereRaw('variation_location_details.qty_available <= p.alert_quantity');

    //Check for permitted locations of a user
    if (!empty($permitted_locations)) {
        if ($permitted_locations != 'all') {
            $query->whereIn('variation_location_details.location_id', $permitted_locations);
        }
    }

    if (! empty(request()->input('location_id'))) {
        $query->where('variation_location_details.location_id', request()->input('location_id'));
    }

    $products = $query->select(
        'p.name as product',
        'l.name as location',
        'variation_location_details.qty_available as stock',
        'p.alert_quantity',
        'p.type',
        'p.sku',
        'pv.name as product_variation',
        'v.name as variation',
        'v.sub_sku',
        'u.short_name as unit'
    )
        ->groupBy('variation_location_details.id')
        ->orderBy('stock', 'asc');

    return $products;
}